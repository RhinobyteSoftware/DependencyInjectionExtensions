<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>$(DefaultTargetFrameworks)</TargetFrameworks>
        <IsPackable>true</IsPackable>

        <!-- VERSION VALUES -->
        <AssemblyVersion>$(DependencyInjectionPackageVersion).0</AssemblyVersion>
        <FileVersion>$(DependencyInjectionPackageVersion).0</FileVersion>
        <InformationalVersion>$(DependencyInjectionPackageVersion)</InformationalVersion>
        <PackageVersion>$(DependencyInjectionPackageVersion)</PackageVersion>
        <Version>$(DependencyInjectionPackageVersion)</Version>

        <PackageId>Rhinobyte.Extensions.DependencyInjection</PackageId>
        <AssemblyName>$(PackageId)</AssemblyName>
        <RootNamespace>$(PackageId)</RootNamespace>
        <Title>$(PackageId)</Title>
        <PackageTags>dependencyinjection ioc inversion-of-control</PackageTags>

        <Summary>Extensions for the .NET dependency injection libraries providing convention based auto-registration support</Summary>
        <Description>$(Summary)

The Rhinobyte.Extensions.Reflection.AssemblyScanner can be used to configure which assemblies to scan and which types to include/exclude.
The IServiceCollection extension methods provide support for registering auto-discovered types and for extending registration to support constructor selection.
        </Description>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="5.0.0" />
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
    </ItemGroup>
    
    <Choose>
        <When Condition=" '$(Configuration)' == 'Debug' AND '$(UseProjectReferences)' == 'true'">
            <ItemGroup>
                <ProjectReference Include="../Rhinobyte.Extensions.Reflection/Rhinobyte.Extensions.Reflection.csproj" />
            </ItemGroup>
        </When>
        <Otherwise>
            <ItemGroup>
                <PackageReference Include="Rhinobyte.Extensions.Reflection" Version="$(ReflectionPackageConsumerDependencyVersion)" />
            </ItemGroup>
        </Otherwise>
    </Choose>

</Project>
