<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>$(DefaultTargetFrameworks)</TargetFrameworks>
        <Configurations>Debug;Release;ReleaseTesting</Configurations>

        <!-- VERSION VALUES -->
        <AssemblyVersion>$(DependencyInjectionPackageVersion).0</AssemblyVersion>
        <FileVersion>$(DependencyInjectionPackageVersion).0</FileVersion>
        <InformationalVersion>$(DependencyInjectionPackageVersion)</InformationalVersion>
        <PackageVersion>$(DependencyInjectionPackageVersion)</PackageVersion>
        <Version>$(DependencyInjectionPackageVersion)</Version>

        <PackageId>Rhinobyte.Extensions.DependencyInjection</PackageId>
        <AssemblyName>$(PackageId)</AssemblyName>
        <RootNamespace>$(PackageId)</RootNamespace>
        <Title>$(PackageId)</Title>
        <PackageTags>dependencyinjection ioc inversion-of-control</PackageTags>

        <Summary>Extensions for the .NET dependency injection libraries providing convention based auto-registration support</Summary>
        <Description>$(Summary)

The Rhinobyte.Extensions.Reflection.AssemblyScanner can be used to configure which assemblies to scan and which types to include/exclude.
The IServiceCollection extension methods provide support for registering auto-discovered types and for extending registration to support constructor selection.
        </Description>
    </PropertyGroup>

    <ItemGroup>
        <!--
            TODO: Support a wider range/lower minimum version of the Microsoft.XXX dependencies

            The v5 dotnet/runtime libraries support a wide range of target frameworks but other dependencies (e.g. a lower version of EF Core) can
            prevent consumers from being able to update to the v5 libraries. I'd prefer to set our minimum required version to the lowest possible
            value. Some considerable though/design work may be required to ensure that our extension libraries will work at runtime with different
            major versions of the various dependency libraries.
        -->
        <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="5.0.0" />
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="$(MicrosoftSourceLinkGitHubVersion)" PrivateAssets="All" />
    </ItemGroup>
    
    <Choose>
        <When Condition=" '$(Configuration)' == 'Debug' AND '$(UseProjectReferences)' == 'true'">
            <ItemGroup>
                <ProjectReference Include="../Rhinobyte.Extensions.Reflection/Rhinobyte.Extensions.Reflection.csproj" />
            </ItemGroup>
        </When>
        <Otherwise>
            <ItemGroup>
                <PackageReference Include="Rhinobyte.Extensions.Reflection" Version="$(ReflectionPackage_ConsumerDependencyVersion)" />
            </ItemGroup>
        </Otherwise>
    </Choose>

</Project>
