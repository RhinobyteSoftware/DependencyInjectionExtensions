using System.Collections.Generic;
using System.Reflection.Emit;

namespace Rhinobyte.ReflectionHelpers
{
	/// <summary>
	/// Static helper class for fast lookup of <see cref="OpCode"/> instances and related information.
	/// </summary>
	/// <summary>
	/// Static helper class for fast lookup of <see cref="OpCode"/> instances and related information.
	/// </summary>
	public static class OpCodeHelper
	{
		/// <summary>
		/// Collection of <see cref="OpCodeType.Nternal"/> opcodes
		/// </summary>
		public static readonly IReadOnlyCollection<OpCode> InternalOpcodes = new OpCode[] { OpCodes.Prefix7, OpCodes.Prefix6, OpCodes.Prefix5, OpCodes.Prefix4, OpCodes.Prefix3, OpCodes.Prefix2, OpCodes.Prefix1, OpCodes.Prefixref };

		/// <summary>
		/// Dictionary to look up the <see cref="OpCodes"/> field name for a given <see cref="OpCode.Value"/>.
		/// </summary>
		public static readonly IReadOnlyDictionary<short, string> NameLookup = new Dictionary<short, string>()
		{
			{ 0, "Nop" },
			{ 1, "Break" },
			{ 2, "Ldarg_0" },
			{ 3, "Ldarg_1" },
			{ 4, "Ldarg_2" },
			{ 5, "Ldarg_3" },
			{ 6, "Ldloc_0" },
			{ 7, "Ldloc_1" },
			{ 8, "Ldloc_2" },
			{ 9, "Ldloc_3" },
			{ 10, "Stloc_0" },
			{ 11, "Stloc_1" },
			{ 12, "Stloc_2" },
			{ 13, "Stloc_3" },
			{ 14, "Ldarg_S" },
			{ 15, "Ldarga_S" },
			{ 16, "Starg_S" },
			{ 17, "Ldloc_S" },
			{ 18, "Ldloca_S" },
			{ 19, "Stloc_S" },
			{ 20, "Ldnull" },
			{ 21, "Ldc_I4_M1" },
			{ 22, "Ldc_I4_0" },
			{ 23, "Ldc_I4_1" },
			{ 24, "Ldc_I4_2" },
			{ 25, "Ldc_I4_3" },
			{ 26, "Ldc_I4_4" },
			{ 27, "Ldc_I4_5" },
			{ 28, "Ldc_I4_6" },
			{ 29, "Ldc_I4_7" },
			{ 30, "Ldc_I4_8" },
			{ 31, "Ldc_I4_S" },
			{ 32, "Ldc_I4" },
			{ 33, "Ldc_I8" },
			{ 34, "Ldc_R4" },
			{ 35, "Ldc_R8" },
			{ 37, "Dup" },
			{ 38, "Pop" },
			{ 39, "Jmp" },
			{ 40, "Call" },
			{ 41, "Calli" },
			{ 42, "Ret" },
			{ 43, "Br_S" },
			{ 44, "Brfalse_S" },
			{ 45, "Brtrue_S" },
			{ 46, "Beq_S" },
			{ 47, "Bge_S" },
			{ 48, "Bgt_S" },
			{ 49, "Ble_S" },
			{ 50, "Blt_S" },
			{ 51, "Bne_Un_S" },
			{ 52, "Bge_Un_S" },
			{ 53, "Bgt_Un_S" },
			{ 54, "Ble_Un_S" },
			{ 55, "Blt_Un_S" },
			{ 56, "Br" },
			{ 57, "Brfalse" },
			{ 58, "Brtrue" },
			{ 59, "Beq" },
			{ 60, "Bge" },
			{ 61, "Bgt" },
			{ 62, "Ble" },
			{ 63, "Blt" },
			{ 64, "Bne_Un" },
			{ 65, "Bge_Un" },
			{ 66, "Bgt_Un" },
			{ 67, "Ble_Un" },
			{ 68, "Blt_Un" },
			{ 69, "Switch" },
			{ 70, "Ldind_I1" },
			{ 71, "Ldind_U1" },
			{ 72, "Ldind_I2" },
			{ 73, "Ldind_U2" },
			{ 74, "Ldind_I4" },
			{ 75, "Ldind_U4" },
			{ 76, "Ldind_I8" },
			{ 77, "Ldind_I" },
			{ 78, "Ldind_R4" },
			{ 79, "Ldind_R8" },
			{ 80, "Ldind_Ref" },
			{ 81, "Stind_Ref" },
			{ 82, "Stind_I1" },
			{ 83, "Stind_I2" },
			{ 84, "Stind_I4" },
			{ 85, "Stind_I8" },
			{ 86, "Stind_R4" },
			{ 87, "Stind_R8" },
			{ 88, "Add" },
			{ 89, "Sub" },
			{ 90, "Mul" },
			{ 91, "Div" },
			{ 92, "Div_Un" },
			{ 93, "Rem" },
			{ 94, "Rem_Un" },
			{ 95, "And" },
			{ 96, "Or" },
			{ 97, "Xor" },
			{ 98, "Shl" },
			{ 99, "Shr" },
			{ 100, "Shr_Un" },
			{ 101, "Neg" },
			{ 102, "Not" },
			{ 103, "Conv_I1" },
			{ 104, "Conv_I2" },
			{ 105, "Conv_I4" },
			{ 106, "Conv_I8" },
			{ 107, "Conv_R4" },
			{ 108, "Conv_R8" },
			{ 109, "Conv_U4" },
			{ 110, "Conv_U8" },
			{ 111, "Callvirt" },
			{ 112, "Cpobj" },
			{ 113, "Ldobj" },
			{ 114, "Ldstr" },
			{ 115, "Newobj" },
			{ 116, "Castclass" },
			{ 117, "Isinst" },
			{ 118, "Conv_R_Un" },
			{ 121, "Unbox" },
			{ 122, "Throw" },
			{ 123, "Ldfld" },
			{ 124, "Ldflda" },
			{ 125, "Stfld" },
			{ 126, "Ldsfld" },
			{ 127, "Ldsflda" },
			{ 128, "Stsfld" },
			{ 129, "Stobj" },
			{ 130, "Conv_Ovf_I1_Un" },
			{ 131, "Conv_Ovf_I2_Un" },
			{ 132, "Conv_Ovf_I4_Un" },
			{ 133, "Conv_Ovf_I8_Un" },
			{ 134, "Conv_Ovf_U1_Un" },
			{ 135, "Conv_Ovf_U2_Un" },
			{ 136, "Conv_Ovf_U4_Un" },
			{ 137, "Conv_Ovf_U8_Un" },
			{ 138, "Conv_Ovf_I_Un" },
			{ 139, "Conv_Ovf_U_Un" },
			{ 140, "Box" },
			{ 141, "Newarr" },
			{ 142, "Ldlen" },
			{ 143, "Ldelema" },
			{ 144, "Ldelem_I1" },
			{ 145, "Ldelem_U1" },
			{ 146, "Ldelem_I2" },
			{ 147, "Ldelem_U2" },
			{ 148, "Ldelem_I4" },
			{ 149, "Ldelem_U4" },
			{ 150, "Ldelem_I8" },
			{ 151, "Ldelem_I" },
			{ 152, "Ldelem_R4" },
			{ 153, "Ldelem_R8" },
			{ 154, "Ldelem_Ref" },
			{ 155, "Stelem_I" },
			{ 156, "Stelem_I1" },
			{ 157, "Stelem_I2" },
			{ 158, "Stelem_I4" },
			{ 159, "Stelem_I8" },
			{ 160, "Stelem_R4" },
			{ 161, "Stelem_R8" },
			{ 162, "Stelem_Ref" },
			{ 163, "Ldelem" },
			{ 164, "Stelem" },
			{ 165, "Unbox_Any" },
			{ 179, "Conv_Ovf_I1" },
			{ 180, "Conv_Ovf_U1" },
			{ 181, "Conv_Ovf_I2" },
			{ 182, "Conv_Ovf_U2" },
			{ 183, "Conv_Ovf_I4" },
			{ 184, "Conv_Ovf_U4" },
			{ 185, "Conv_Ovf_I8" },
			{ 186, "Conv_Ovf_U8" },
			{ 194, "Refanyval" },
			{ 195, "Ckfinite" },
			{ 198, "Mkrefany" },
			{ 208, "Ldtoken" },
			{ 209, "Conv_U2" },
			{ 210, "Conv_U1" },
			{ 211, "Conv_I" },
			{ 212, "Conv_Ovf_I" },
			{ 213, "Conv_Ovf_U" },
			{ 214, "Add_Ovf" },
			{ 215, "Add_Ovf_Un" },
			{ 216, "Mul_Ovf" },
			{ 217, "Mul_Ovf_Un" },
			{ 218, "Sub_Ovf" },
			{ 219, "Sub_Ovf_Un" },
			{ 220, "Endfinally" },
			{ 221, "Leave" },
			{ 222, "Leave_S" },
			{ 223, "Stind_I" },
			{ 224, "Conv_U" },
			{ 248, "Prefix7" },
			{ 249, "Prefix6" },
			{ 250, "Prefix5" },
			{ 251, "Prefix4" },
			{ 252, "Prefix3" },
			{ 253, "Prefix2" },
			{ 254, "Prefix1" },
			{ 255, "Prefixref" },
			{ -512, "Arglist" },
			{ -511, "Ceq" },
			{ -510, "Cgt" },
			{ -509, "Cgt_Un" },
			{ -508, "Clt" },
			{ -507, "Clt_Un" },
			{ -506, "Ldftn" },
			{ -505, "Ldvirtftn" },
			{ -503, "Ldarg" },
			{ -502, "Ldarga" },
			{ -501, "Starg" },
			{ -500, "Ldloc" },
			{ -499, "Ldloca" },
			{ -498, "Stloc" },
			{ -497, "Localloc" },
			{ -495, "Endfilter" },
			{ -494, "Unaligned" },
			{ -493, "Volatile" },
			{ -492, "Tailcall" },
			{ -491, "Initobj" },
			{ -490, "Constrained" },
			{ -489, "Cpblk" },
			{ -488, "Initblk" },
			{ -486, "Rethrow" },
			{ -484, "Sizeof" },
			{ -483, "Refanytype" },
			{ -482, "Readonly" }
		};


		/// <summary>
		/// Array lookup of <see cref="OpCode"/> instances for single byte value opcodes.
		/// The index corresponds with the single byte value of the opcode.
		/// </summary>
		public static readonly OpCode[] SingleByteOpCodeLookup = new OpCode[] { OpCodes.Nop, OpCodes.Break, OpCodes.Ldarg_0, OpCodes.Ldarg_1, OpCodes.Ldarg_2, OpCodes.Ldarg_3, OpCodes.Ldloc_0, OpCodes.Ldloc_1, OpCodes.Ldloc_2, OpCodes.Ldloc_3, OpCodes.Stloc_0, OpCodes.Stloc_1, OpCodes.Stloc_2, OpCodes.Stloc_3, OpCodes.Ldarg_S, OpCodes.Ldarga_S, OpCodes.Starg_S, OpCodes.Ldloc_S, OpCodes.Ldloca_S, OpCodes.Stloc_S, OpCodes.Ldnull, OpCodes.Ldc_I4_M1, OpCodes.Ldc_I4_0, OpCodes.Ldc_I4_1, OpCodes.Ldc_I4_2, OpCodes.Ldc_I4_3, OpCodes.Ldc_I4_4, OpCodes.Ldc_I4_5, OpCodes.Ldc_I4_6, OpCodes.Ldc_I4_7, OpCodes.Ldc_I4_8, OpCodes.Ldc_I4_S, OpCodes.Ldc_I4, OpCodes.Ldc_I8, OpCodes.Ldc_R4, OpCodes.Ldc_R8, OpCodes.Nop, OpCodes.Dup, OpCodes.Pop, OpCodes.Jmp, OpCodes.Call, OpCodes.Calli, OpCodes.Ret, OpCodes.Br_S, OpCodes.Brfalse_S, OpCodes.Brtrue_S, OpCodes.Beq_S, OpCodes.Bge_S, OpCodes.Bgt_S, OpCodes.Ble_S, OpCodes.Blt_S, OpCodes.Bne_Un_S, OpCodes.Bge_Un_S, OpCodes.Bgt_Un_S, OpCodes.Ble_Un_S, OpCodes.Blt_Un_S, OpCodes.Br, OpCodes.Brfalse, OpCodes.Brtrue, OpCodes.Beq, OpCodes.Bge, OpCodes.Bgt, OpCodes.Ble, OpCodes.Blt, OpCodes.Bne_Un, OpCodes.Bge_Un, OpCodes.Bgt_Un, OpCodes.Ble_Un, OpCodes.Blt_Un, OpCodes.Switch, OpCodes.Ldind_I1, OpCodes.Ldind_U1, OpCodes.Ldind_I2, OpCodes.Ldind_U2, OpCodes.Ldind_I4, OpCodes.Ldind_U4, OpCodes.Ldind_I8, OpCodes.Ldind_I, OpCodes.Ldind_R4, OpCodes.Ldind_R8, OpCodes.Ldind_Ref, OpCodes.Stind_Ref, OpCodes.Stind_I1, OpCodes.Stind_I2, OpCodes.Stind_I4, OpCodes.Stind_I8, OpCodes.Stind_R4, OpCodes.Stind_R8, OpCodes.Add, OpCodes.Sub, OpCodes.Mul, OpCodes.Div, OpCodes.Div_Un, OpCodes.Rem, OpCodes.Rem_Un, OpCodes.And, OpCodes.Or, OpCodes.Xor, OpCodes.Shl, OpCodes.Shr, OpCodes.Shr_Un, OpCodes.Neg, OpCodes.Not, OpCodes.Conv_I1, OpCodes.Conv_I2, OpCodes.Conv_I4, OpCodes.Conv_I8, OpCodes.Conv_R4, OpCodes.Conv_R8, OpCodes.Conv_U4, OpCodes.Conv_U8, OpCodes.Callvirt, OpCodes.Cpobj, OpCodes.Ldobj, OpCodes.Ldstr, OpCodes.Newobj, OpCodes.Castclass, OpCodes.Isinst, OpCodes.Conv_R_Un, OpCodes.Nop, OpCodes.Nop, OpCodes.Unbox, OpCodes.Throw, OpCodes.Ldfld, OpCodes.Ldflda, OpCodes.Stfld, OpCodes.Ldsfld, OpCodes.Ldsflda, OpCodes.Stsfld, OpCodes.Stobj, OpCodes.Conv_Ovf_I1_Un, OpCodes.Conv_Ovf_I2_Un, OpCodes.Conv_Ovf_I4_Un, OpCodes.Conv_Ovf_I8_Un, OpCodes.Conv_Ovf_U1_Un, OpCodes.Conv_Ovf_U2_Un, OpCodes.Conv_Ovf_U4_Un, OpCodes.Conv_Ovf_U8_Un, OpCodes.Conv_Ovf_I_Un, OpCodes.Conv_Ovf_U_Un, OpCodes.Box, OpCodes.Newarr, OpCodes.Ldlen, OpCodes.Ldelema, OpCodes.Ldelem_I1, OpCodes.Ldelem_U1, OpCodes.Ldelem_I2, OpCodes.Ldelem_U2, OpCodes.Ldelem_I4, OpCodes.Ldelem_U4, OpCodes.Ldelem_I8, OpCodes.Ldelem_I, OpCodes.Ldelem_R4, OpCodes.Ldelem_R8, OpCodes.Ldelem_Ref, OpCodes.Stelem_I, OpCodes.Stelem_I1, OpCodes.Stelem_I2, OpCodes.Stelem_I4, OpCodes.Stelem_I8, OpCodes.Stelem_R4, OpCodes.Stelem_R8, OpCodes.Stelem_Ref, OpCodes.Ldelem, OpCodes.Stelem, OpCodes.Unbox_Any, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Conv_Ovf_I1, OpCodes.Conv_Ovf_U1, OpCodes.Conv_Ovf_I2, OpCodes.Conv_Ovf_U2, OpCodes.Conv_Ovf_I4, OpCodes.Conv_Ovf_U4, OpCodes.Conv_Ovf_I8, OpCodes.Conv_Ovf_U8, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Refanyval, OpCodes.Ckfinite, OpCodes.Nop, OpCodes.Nop, OpCodes.Mkrefany, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Ldtoken, OpCodes.Conv_U2, OpCodes.Conv_U1, OpCodes.Conv_I, OpCodes.Conv_Ovf_I, OpCodes.Conv_Ovf_U, OpCodes.Add_Ovf, OpCodes.Add_Ovf_Un, OpCodes.Mul_Ovf, OpCodes.Mul_Ovf_Un, OpCodes.Sub_Ovf, OpCodes.Sub_Ovf_Un, OpCodes.Endfinally, OpCodes.Leave, OpCodes.Leave_S, OpCodes.Stind_I, OpCodes.Conv_U, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Nop, OpCodes.Prefix7, OpCodes.Prefix6, OpCodes.Prefix5, OpCodes.Prefix4, OpCodes.Prefix3, OpCodes.Prefix2, OpCodes.Prefix1, OpCodes.Prefixref };

		/// <summary>
		/// Array lookup of <see cref="OpCode"/> instances for two byte value opcodes.
		/// The index corresponds with the 2nd byte of the opcode value.
		/// </summary>
		public static readonly OpCode[] TwoByteOpCodeLookup = new OpCode[] { OpCodes.Arglist, OpCodes.Ceq, OpCodes.Cgt, OpCodes.Cgt_Un, OpCodes.Clt, OpCodes.Clt_Un, OpCodes.Ldftn, OpCodes.Ldvirtftn, OpCodes.Nop, OpCodes.Ldarg, OpCodes.Ldarga, OpCodes.Starg, OpCodes.Ldloc, OpCodes.Ldloca, OpCodes.Stloc, OpCodes.Localloc, OpCodes.Nop, OpCodes.Endfilter, OpCodes.Unaligned, OpCodes.Volatile, OpCodes.Tailcall, OpCodes.Initobj, OpCodes.Constrained, OpCodes.Cpblk, OpCodes.Initblk, OpCodes.Nop, OpCodes.Rethrow, OpCodes.Nop, OpCodes.Sizeof, OpCodes.Refanytype, OpCodes.Readonly };
	}
}
